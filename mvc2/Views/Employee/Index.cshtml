
@model IEnumerable<EmployeeViewModel>
@{
    ViewData["Title"] = "Index";

}
@inject IUnitOfWork _UnitOfWork;
@{
    var departments = new SelectList(_UnitOfWork.DepartmentRepository.GetAll(), nameof(Department.Id), nameof(Department.Name));
}


<h1>All Employees</h1>

@if (TempData["Message"]!=null)
{
    <div class="alert-primary w-75 m-auto rounded p-5">
        @TempData["Message"]
    </div>
}


<div class="w-75 d-flex justify-content-center align-items-center m-3 ">
    <form asp-action="Index" class="w-100 text-center d-flex">
        <input type="text" name="searchInput" placeholder="Search by name" class="form-control  mx-3" />
        <input type="submit" class="btn btn-outline-info " value="Search" />
        </form>
</div>


<a asp-controller="Employee" asp-action="Create" class="btn btn-outline-primary my-3">
    Create New Employee
</a>

<div class="m-auto w-100">


    @if(Model.Count()>0){
    <table class="w-100 table-striped table-hover p-4 text-center">

        
    <tr class="p-4">
        <th>
            @Html.DisplayNameFor(e=>e.Name)
        </th>

            <th>
                @Html.DisplayNameFor(e =>e.Age)
            </th>

            <th>
                @Html.DisplayNameFor(e => e.Address)
            </th>


                <th>
                    @Html.DisplayNameFor(e => e.Salary)
                </th>


                <th>
                    @Html.DisplayNameFor(e => e.IsActive)
                </th>


                <th>
                    @Html.DisplayNameFor(e => e.Gender)
                </th>


                <th>
                    @Html.DisplayNameFor(e => e.Email)
                </th>

                <th>
                    @Html.DisplayNameFor(e => e.Department)
                </th>




            <th>
                Details 
            </th>
            <th>
                Update
            </th>
            <th>
                Delete
            </th>
    </tr>

            @foreach(var employee in Model)
            {
                <tr class="p-4">
                    <td>
                        @employee.Name
                    </td>

                    <td>
                        @employee.Age
                    </td>

                    <td>
                        @employee.Address
                    </td>

                    <td>
                        @Html.DisplayFor(m => employee.Salary)

                    </td>

                    <td>
                        @Html.DisplayFor(m=>employee.IsActive)

                    </td>

                    <td>
                        @employee.Gender
                    </td>


                    <td>
                        @Html.DisplayFor(m=>employee.Email)
                    </td>

                    <td>
                        @Html.DisplayFor(m => employee.DepartmentId)
                    </td>

                    <partial name="buttonsIndexPartial" model="employee.Id.ToString()">

                    </partial>
                    

               
                </tr>
            }



</table>
    }

    else{
        <div class="mb-auto alert-dark ">
                <h3 class="text-center p-4">
                    There are no employees
                </h3>
        </div>
    }


</div>

